# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.8'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        goals: 'package'
    - task: CopyFiles@2
      inputs:
        Contents: '**/*.war'
        TargetFolder: '$(build.artifactstagingdirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
- stage: test
  dependsOn: [] #parllel
  jobs:
  - job: 
    pool:
      vmImage: ubuntu-latest
    container: 
    steps:
    - bash: echo "hello"
- stage: Deploy
  jobs:
  - deployment: DeployJob
    environment:
      name: Deployment
      resourceType: VirtualMachine
    strategy:
      # default deployment strategy
      runOnce:
        deploy:
          steps:

          - task: TomcatDeployment@1
            inputs:
              TomcatUrl: 'http://localhost:8080'
              Username: 'admin'
              Password: 'admin'
              Warfile: '/home/azureuser/tomcat/azagent/_work/1/drop/target/SaranTest.war'
              Context: '/SaranTest'
              ServerVersion: '7OrAbove'

#          - task: CmdLine@2
#            inputs:
#              script: 'docker cp /home/vsts/work/1/drop/target/SaranTest.war tomcat:/usr/local/tomcat/webapps/'

